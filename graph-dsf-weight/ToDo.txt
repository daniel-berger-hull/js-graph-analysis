Nov 17, 2023
------------

 * Added a custom randering, where we can specify manually (with an array) the position of each nodes
 * Added a bigger version of the graph --> But Dijkstras fails! That is due to the array of letter --> we have index greater than 9, and now 10,11,etc take more than one characters

  To Do:
    Fix the problem


Nov 16, 2023
------------

  * Fixed the Dijkstras method, to return the weight and paths from a node to all the other nodes. The m ethod is  now usefull enough to be used
  * Fixed the drawing of Dijkstras results (Shortest Path button)
  
  To Do:

    Have a type of graph where you can explicitely place the position of the nodes (instead to rely on NodeSpaceLocator.js)  

Nov 14, 2023
------------

  * Got a first draft of list of nodes to follow (instead of just overall cost for a defined node to each nodes)

 To Do:
 * shortestPath has the nodes list, but in a string, but it would be better to have an array of int, with the index of the nodes
 

Nov 13, 2023
------------

   * Inclusion of the Dijkstras algo on the main graph included (but no rendering so far)

   to Do:
   * Dijkstras to return list of all nodes for a path   
       (It currently returns the total cost, which is a good, start bur for rendering, the full path with all nodes in the path are required)
   * The Path methods (i.e DFS and shortestPath) should be extracted an put into their own files (and specilazed classes would be even better)



Nov 10, 2023
------------

   Started experiments on Dijkstras shortest path.  A test method been added to GraphModel.js 
   The code comes from the web site: 
            https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-greedy-algo-7/ 
   Adaptation to my own Graph Model (using an adgency matrix) done, and results given are correct (print out on the console for now)
   
  To Do:
    * Try the Dijkstras algo on the main graph (which has less nodes than the Dijkstras example ) 

Nov 3, 2023
------------

 To Do:
  * Should add the weigthed graph, instead of since connection node like it currently done.
  * Should add a NodeJS and add Jest tests...

  